spring:
  application:
    name: boot-demo
  mvc:
    hiddenmethod:
      filter:
        enabled: true

    contentnegotiation:
      favor-parameter: true # 开启请求参数内容协商模式，仅支持 format=json 或 format=xml 两种参数

  # 导入相关包不配置启动会报错
  datasource:
    url: jdbc:mysql://localhost:3306/Demo
    username: root
    password: root1234
    driver-class-name: com.mysql.jdbc.Driver
    #    type: com.zaxxer.hikari.HikariDataSource
    druid:
      aop-patterns: com.chnherb.boot
      filters: stat,wall,slf4j
      filter:
        stat:
          enabled: true
          slow-sql-millis: 1000
          log-slow-sql: true
        wall:
          enabled: true
          config:
            drop-table-allow: false
      stat-view-servlet:
        enabled: true
        login-username: bo
        login-password: 123456
        reset-enable: false
      web-stat-filter:
        enabled: true
        url-pattern: /*
        exclusions: '*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*'

  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 100MB

# 配置mybatis规则
mybatis:
  # config-location 和 configuration 不能同时定义
  # config-location: classpath:mybatis/mybatis-config.xml  #全局配置文件位置
  mapper-locations: classpath:mybatis/mapper/*.xml  #sql映射文件位置
  configuration:
    map-underscore-to-camel-case: true

# management 是所有 actuator 的配置
management:
  endpoints:
    enabled-by-default: true # 开启所有监控端点
    web:
      exposure:
        include: '*'  # 以 web 方式暴露所有端点
  endpoint: # 对某个端点的具体配置
    health:
      show-details: always
      enabled: true
    info:
      enabled: true
    beans:
      enabled: true
    metrics:
      enabled: true

# 默认访问 /actuator/info 没有任何信息，这里定制才会有对应信息
info:
  appName: boot-web
  appVersion: 1.0.1
  mavenProjectName: @project.artifactId@ # 使用@xx@可以获取maven的pom信息
  mavenProjectVersion: @project.version@